import org.apache.tools.ant.filters.ReplaceTokens

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}

dependencies {
    // Other modules
    compileOnly project(':NMS:Wrapper')

    // Referenced dependencies
    compileOnly "io.papermc.paper:paper-api:$spigotVersion-R0.1-SNAPSHOT"
    compileOnly 'me.clip:placeholderapi:2.10.9'
    compileOnly 'org.jetbrains:annotations:23.1.0'

    // Mojang dependencies
    compileOnly 'com.mojang:authlib:1.5.21'

    // Misc other
    compileOnly 'net.coreprotect:coreprotect:19.4'
    compileOnly 'de.diddiz:logblock:1.16.1.1'
    compileOnly 'dev.frankheijden.insights:Insights:6.13.0'
<<<<<<< HEAD
//    compileOnly 'com.songoda:epicbosses:1.2.12' //.
    compileOnly files('libs/Clearlag.jar')
=======
    compileOnly 'com.songoda:epicbosses:1.2.12'
>>>>>>> master
    compileOnly 'com.github.brcdev-minecraft:shopgui-api:3.0.0'
    compileOnly files('libs/Citizens-2.0.34-b3417.jar')
    compileOnly files('libs/Shopkeepers-2.19.0.jar')
    compileOnly files('libs/EliteMobs.jar')
    //compileOnly 'org.mineacademy.plugin:Boss-API:3.8.0'
    compileOnly 'io.lumine:Mythic-Dist:5.3.3'
<<<<<<< HEAD
    compileOnly files('libs/mcMMO.jar')
=======
    compileOnly ('com.gmail.nossr50.mcMMO:mcMMO:2.2.012') {
        exclude group: 'com.comphenix.protocol'
    }
>>>>>>> master
    compileOnly 'com.jacob_vejvoda:infernalmobs:6.6'
    compileOnly files('libs/SimplePets.jar')
    compileOnly 'com.bgsoftware:WildChestsAPI:2.2.3'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.4'
    compileOnly 'dev.rosewood:roseloot:1.2.0'

    // Dependencies that will be shaded into the jar
    api "dev.rosewood:rosegarden:$rosegardenVersion"
<<<<<<< HEAD
    api 'dev.rosewood:guiframework:1.1.3.10-SNAPSHOT'
=======
    api "dev.rosewood:rosegarden-compatibility:$rosegardenVersion"
    api 'dev.rosewood:guiframework:1.1.4'
>>>>>>> master
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

shadowJar {
    archiveClassifier.set(null)
}
